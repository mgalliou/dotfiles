" Plugins {{{

" auto install vimplug
if !has('win32') && empty(glob('~/.vim/autoload/plug.vim'))
	silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
				\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()
Plug 'dstein64/vim-startuptime'
Plug 'edkolev/tmuxline.vim'
Plug 'leafgarland/typescript-vim',
Plug 'cespare/vim-toml',
Plug 'pearofducks/ansible-vim'
Plug 'dag/vim-fish',
Plug 'vim-scripts/tf2.vim', { 'for': 'tf2' }
Plug 'tbastos/vim-lua',
Plug 'tmux-plugins/vim-tmux',
"Plug 'tpope/vim-classpath', { 'for': 'java' }
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'luochen1990/rainbow'
Plug 'tpope/vim-fugitive'
Plug 'vimwiki/vimwiki'
Plug 'junegunn/goyo.vim'
if !has("nvim")
	Plug 'gruvbox-community/gruvbox'
	Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
	Plug 'junegunn/fzf.vim'
	Plug 'dense-analysis/ale'
	Plug 'ludovicchabant/vim-gutentags'
	Plug 'skywind3000/gutentags_plus'
	Plug 'airblade/vim-gitgutter'
	Plug 'itchyny/lightline.vim'
	Plug 'shinchu/lightline-gruvbox.vim'
elseif has("nvim")
	Plug 'nvim-lua/plenary.nvim'
	Plug 'ellisonleao/gruvbox.nvim'
	Plug 'm4xshen/autoclose.nvim'
	Plug 'DanilaMihailov/beacon.nvim'
	Plug 'lukas-reineke/indent-blankline.nvim'
	Plug 'xiyaowong/virtcolumn.nvim'
	Plug 'RRethy/vim-illuminate'
	Plug 'asiryk/auto-hlsearch.nvim'
	Plug 'folke/todo-comments.nvim'
	Plug 'kyazdani42/nvim-web-devicons'
	Plug 'nvim-lualine/lualine.nvim'
	Plug 'neovim/nvim-lspconfig'
	Plug 'jose-elias-alvarez/null-ls.nvim'
	Plug 'williamboman/mason.nvim'
	Plug 'williamboman/mason-lspconfig.nvim'
	Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
	Plug 'L3MON4D3/LuaSnip'
	Plug 'rafamadriz/friendly-snippets'
	Plug 'hrsh7th/nvim-cmp'
	Plug 'hrsh7th/cmp-nvim-lsp'
	Plug 'hrsh7th/cmp-buffer'
	Plug 'hrsh7th/cmp-path'
	Plug 'hrsh7th/cmp-nvim-lua'
	Plug 'saadparwaiz1/cmp_luasnip'
	Plug 'm-demare/hlargs.nvim'
	Plug 'kosayoda/nvim-lightbulb'
	Plug 'filipdutescu/renamer.nvim', { 'branch': 'master' }
	Plug 'mfussenegger/nvim-dap'
	Plug 'rcarriga/nvim-dap-ui'
	Plug 'nvim-telescope/telescope.nvim', { 'tag': '0.1.0' }
	Plug 'nvim-telescope/telescope-ui-select.nvim'
	Plug 'ThePrimeagen/harpoon'
	Plug 'lewis6991/gitsigns.nvim'
	Plug 'simrat39/rust-tools.nvim'
	Plug 'mfussenegger/nvim-jdtls'
	Plug 'nvim-neorg/neorg', {'do': ':Neorg sync-parsers'}
endif
call plug#end()

"}}}
" Options ... {{{

" Colorscheme
if tools#PluginIsLoaded("gruvbox")
	set background=dark
	let g:gruvbox_italic=1
	let g:gruvbox_contrast_dark='soft'
	let g:gruvbox_contrast_light='soft'
	"let g:gruvbox_invert_signs=1
endif
colorscheme gruvbox

" enable 256 color and set tmux as term if in a Windows terminal {{{
" TODO: check if this is still needed
if has("win32") && !has("gui_running")
	set term=xterm
	set t_Co=256
	colorscheme gruvbox
"	let &t_AB="\e[48;5;%dm"
"	let &t_AF="\e[38;5;%dm"
" enable 256 color in capable terminals
elseif (-1 < stridx("256", $TERM))
	set t_Co=256
elseif (-1 < stridx("xterm", $TERM))
	colorscheme default
endif
"}}},

" Behavior
set backspace=indent,eol,start
set scrolloff=4
set sidescrolloff=4
set splitright
set splitbelow
augroup disableautocomment
	autocmd!
	autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
augroup END
set updatetime=100
set virtualedit=all

" Indentation
set autoindent
set tabstop=4
set shiftwidth=4
set softtabstop=0

" UI
set noshowmode
set signcolumn=yes
set number
set relativenumber
set wildmenu
set colorcolumn=81
set cursorline
set listchars+=space:·
set listchars+=eol:↴
runtime macros/justify.vim "allow paragraph justification with _j 

" Searching
set incsearch
set ignorecase
set smartcase
set showmatch
if exists("##CmdLineEnter")
	augroup dynamic\_smartcase
		autocmd!
		autocmd CmdLineEnter : set nosmartcase
		autocmd CmdLineLeave : set smartcase
	augroup END
endif

" Folding
set foldmethod=marker

" Filetype
let g:asmsyntax = 'nasm'

" Spellchecking
set spelllang=en,fr
set spellsuggest=best,10

" Backup
set history=200
set noswapfile
set backup
set backupdir-=.
set undofile
set undodir-=.

" netrw 
let g:netrw_banner = 0
let g:netrw_liststyle = 3
"let g:netrw_list_hide = '\(^\|\s\s\)\zs\.\S\+'

"}}}
" Mappings {{{

let mapleader = " "
" reload vimrc
nnoremap <leader>rl <CMD>so $MYVIMRC<CR>
" remove highlights
nnoremap <leader>hl <CMD>nohl<CR>
" remove trailing white spaces
nnoremap <leader>ws m`:%s/\s\+$//<CR>:let @/=''<CR>``:w<CR>
" toggle invisible chars
nnoremap <leader>lst <CMD>set list!<CR>
" save files with root privileges
cmap w!! w !sudo tee % >/dev/null

nnoremap <leader>sc <CMD>set spell!<CR>
nnoremap <leader>ln <CMD>call tools#ToggleLineNumberMode()<CR>

"}}}
